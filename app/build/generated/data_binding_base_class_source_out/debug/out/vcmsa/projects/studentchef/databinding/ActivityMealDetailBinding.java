// Generated by view binder compiler. Do not edit!
package vcmsa.projects.studentchef.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.MaterialToolbar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import vcmsa.projects.studentchef.R;

public final class ActivityMealDetailBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final TextView instructions;

  @NonNull
  public final LinearLayout mealDetailRoot;

  @NonNull
  public final TextView title;

  @NonNull
  public final MaterialToolbar toolbar;

  private ActivityMealDetailBinding(@NonNull LinearLayout rootView, @NonNull ImageView imageView,
      @NonNull TextView instructions, @NonNull LinearLayout mealDetailRoot, @NonNull TextView title,
      @NonNull MaterialToolbar toolbar) {
    this.rootView = rootView;
    this.imageView = imageView;
    this.instructions = instructions;
    this.mealDetailRoot = mealDetailRoot;
    this.title = title;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMealDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMealDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_meal_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMealDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.instructions;
      TextView instructions = ViewBindings.findChildViewById(rootView, id);
      if (instructions == null) {
        break missingId;
      }

      LinearLayout mealDetailRoot = (LinearLayout) rootView;

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityMealDetailBinding((LinearLayout) rootView, imageView, instructions,
          mealDetailRoot, title, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
